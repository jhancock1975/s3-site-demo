name: Deploy Static Assets to S3

on:
  push:
    branches:
      - main
    paths:
      - 'static/**'
  workflow_dispatch:

jobs:
  deploy-static:
    runs-on: ubuntu-latest
    env:
      AWS_REGION: ${{ secrets.AWS_REGION }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      CLOUDFRONT_DISTRIBUTION_ID: ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-region: ${{ env.AWS_REGION }}

      - name: Sync static assets to S3 (prune & detect changes)
        run: |
          echo "→ Syncing static/ → s3://taptupo.com/ (with deletions)…"
          CHANGES=$(aws s3 sync static/ s3://taptupo.com/ --delete \
                    | grep -E '^(upload|delete):' \
                    | awk '{print $2}')
          
          if [ -n "$CHANGES" ]; then
            echo "→ Detected changes:"
            echo "$CHANGES"
            
            # Build an array of "/path/to/object" entries for invalidation
            PATHS=()
            for FILE in $CHANGES; do
              PATHS+=( "/${FILE}" )
            done

            echo "→ Invalidating those paths on CloudFront…"
            aws cloudfront create-invalidation \
              --distribution-id ${{ env.CLOUDFRONT_DISTRIBUTION_ID }} \
              --paths "${PATHS[@]}"
          else
            echo "→ No changed or deleted files; skipping CloudFront invalidation."
          fi

      - name: Done
        run: echo "Static deploy complete."
