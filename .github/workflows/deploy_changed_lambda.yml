name: Deploy Changed Go Lambda Functions

on:
  push:
    branches:
      - main
    # Only run when something under lambda/ changes
    paths:
      - 'lambda/**'
  pull_request:
    paths:
      - 'lambda/**'

permissions:
  contents: read

env:
  AWS_REGION: us-east-1
  ACCOUNT_ID: ${{ secrets.ACCOUNT_ID }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: '1.20'

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ${{ env.AWS_REGION }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Find changed Go lambda functions
        id: find_functions
        run: |
          echo "Comparing ${GITHUB_EVENT_BEFORE} → ${GITHUB_SHA}"
          CHANGED=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} -- 'lambda/**/*.go' \
            | sed 's|lambda/||;s|\.go||' \
            | sort -u \
            | tr '\n' ' ')
          echo "functions=$CHANGED" >> $GITHUB_ENV
          echo "Changed functions: $CHANGED"

      - name: Deploy changed functions
        if: env.functions != ''
        run: |
          set -euo pipefail
          trap 'echo "❌ Error on line $LINENO"; exit 1' ERR

          for fn in $functions; do
            echo "=== Deploying lambda/$fn ==="
            pushd "lambda/$fn"

            # Build binary
            GOOS=linux GOARCH=amd64 go build -o bootstrap *.go

            # Zip it
            zip -q "${fn}.zip" bootstrap

            # Create or update Lambda
            if ! aws lambda get-function --function-name "$fn" >/dev/null 2>&1; then
              aws lambda create-function \
                --function-name "$fn" \
                --runtime provided.al2 \
                --role arn:aws:iam::${ACCOUNT_ID}:role/lambda_exec_role \
                --handler bootstrap \
                --zip-file fileb://"${fn}.zip"
            else
              aws lambda update-function-code \
                --function-name "$fn" \
                --zip-file fileb://"${fn}.zip"
            fi

            popd
          done
